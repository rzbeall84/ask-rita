name: Deploy Supabase Edge Functions

on:
  push:
    branches: [ main, master ]
    paths: 
      - 'supabase/functions/**'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy all functions'
        required: false
        type: boolean
        default: false

env:
  SUPABASE_PROJECT_ID: onargmygfwynbbrytkpy

jobs:
  deploy-functions:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Supabase CLI
        run: |
          npm install -g supabase@latest
          supabase --version

      - name: Login to Supabase
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "Logging into Supabase..."
          supabase login --token "$SUPABASE_ACCESS_TOKEN"

      - name: Link to Supabase project
        run: |
          echo "Linking to project $SUPABASE_PROJECT_ID..."
          supabase link --project-ref $SUPABASE_PROJECT_ID

      - name: Make deployment script executable
        run: chmod +x .github/scripts/deploy-functions.sh

      - name: Deploy Edge Functions using Advanced Script
        env:
          FORCE_DEPLOY: ${{ github.event.inputs.force_deploy || 'false' }}
          SUPABASE_PROJECT_ID: ${{ env.SUPABASE_PROJECT_ID }}
        run: |
          echo "üöÄ Starting automated deployment with advanced script..."
          echo "Force deploy: $FORCE_DEPLOY"
          
          # Export environment variables for the script
          export FORCE_DEPLOY="$FORCE_DEPLOY"
          export SUPABASE_PROJECT_ID="$SUPABASE_PROJECT_ID"
          
          # Run the comprehensive deployment script
          if ./.github/scripts/deploy-functions.sh; then
            echo "‚úÖ Deployment script completed successfully"
          else
            echo "‚ùå Deployment script failed"
            echo "üìã Check logs above for detailed error information"
            exit 1
          fi

      - name: Check for Legacy Auto-Generated Functions
        run: |
          echo "üîç Checking for legacy auto-generated function names..."
          
          # Get list of deployed functions
          deployed_functions=$(supabase functions list 2>/dev/null | tail -n +2 | awk '{print $1}' | grep -v '^$' || echo "")
          
          # List of intended function names
          intended_functions=(
            "create-admin-user" "manage-user-session" "validate-invite" "join-organization"
            "generate-invite" "setup-user-sessions" "rita-chat" "extract-document-text"
            "generate-embeddings" "search-embeddings" "create-checkout-session" 
            "create-overage-checkout" "customer-portal" "stripe-webhook" "check-subscription"
            "setup-query-usage" "update-promo-codes" "send-email" "admin-dashboard"
            "setup-org-integrations" "update-database-schema" "encrypt-quickbase-token"
            "schedule-quickbase-sync" "sync-quickbase-data" "test-quickbase-connection"
          )
          
          # Check for auto-generated function names
          auto_generated_functions=()
          if [ -n "$deployed_functions" ]; then
            echo "$deployed_functions" | while read -r func_name; do
              if [ -n "$func_name" ]; then
                # Check if this is NOT in our intended list (likely auto-generated)
                if ! printf '%s\n' "${intended_functions[@]}" | grep -q "^$func_name$"; then
                  echo "‚ö†Ô∏è  Detected auto-generated function: $func_name"
                fi
              fi
            done
          fi
          
          echo ""
          echo "üìã If auto-generated functions were detected above, you may want to clean them up:"
          echo "   supabase functions delete <auto-generated-name>"
          echo ""
          echo "‚úÖ Final verification - All Edge Functions available at:"
          echo "   https://onargmygfwynbbrytkpy.supabase.co/functions/v1/"
          
          # Final function list
          echo ""
          echo "üìä Current deployed functions:"
          supabase functions list